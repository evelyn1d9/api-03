"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var prompts_1 = __importDefault(require("prompts"));
var resync_1 = __importDefault(require("../../api/apidocs/resync"));
var initOas_1 = __importDefault(require("../../api/initOas"));
var constants_1 = require("../../constants");
var isCI_1 = require("../../helper/isCI");
var terminalWrapper_1 = __importDefault(require("../../helper/terminalWrapper"));
var baseCommand_1 = __importDefault(require("../baseCommand"));
var ResyncCommand = /** @class */ (function (_super) {
    __extends(ResyncCommand, _super);
    function ResyncCommand() {
        var _this = _super.call(this) || this;
        _this.command = "apidocs:resync";
        _this.description = "Resync your OpenAPI definition to Document360";
        _this.commandCategory = constants_1.CommandCategories.apidocs;
        _this.usage = "apidocs:resync [options]";
        _this.args = [
            {
                name: "apiKey",
                type: String,
                description: "Project API Key"
            },
            {
                name: "userId",
                type: String,
                description: "User Id that's used to generate API Docs"
            },
            {
                name: "apiReferenceId",
                type: String,
                description: "API Reference Id to resync",
            },
            {
                name: "apihubUrl",
                type: String,
                description: "APIHUB Base URL. The default value for this parameter is 'https://apihub.document360.io'"
            },
            {
                name: "path",
                type: String,
                description: "File path of your respective API Reference"
            },
            {
                name: "force",
                type: Boolean,
                description: "Force import your API Reference. It will import even if there are errors or warnings present within your specification files."
            },
            {
                name: "publish",
                type: Boolean,
                description: "Publish articles after import. By default, all the articles will be in draft state after import"
            }
        ];
        return _this;
    }
    ResyncCommand.prototype.run = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            var apiReferenceAnswer, _a, _b;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0: return [4 /*yield*/, _super.prototype.run.call(this, options)];
                    case 1:
                        _c.sent();
                        if (!!(0, isCI_1.isCI)()) return [3 /*break*/, 6];
                        if (!!options.apiReferenceId) return [3 /*break*/, 3];
                        return [4 /*yield*/, (0, terminalWrapper_1.default)([
                                {
                                    type: 'text',
                                    name: 'apiReferenceId',
                                    message: 'Enter API Reference Id',
                                }
                            ])];
                    case 2:
                        apiReferenceAnswer = _c.sent();
                        options.apiReferenceId = apiReferenceAnswer.apiReferenceId;
                        _c.label = 3;
                    case 3:
                        if (!!options.path) return [3 /*break*/, 5];
                        _a = options;
                        return [4 /*yield*/, (0, initOas_1.default)()];
                    case 4:
                        _a.path = _c.sent();
                        _c.label = 5;
                    case 5: return [3 /*break*/, 8];
                    case 6:
                        if (!options.apiReferenceId)
                            throw new Error("apiReferenceId parameter not found. Please provide --apiReferenceId");
                        if (!!options.path) return [3 /*break*/, 8];
                        _b = options;
                        return [4 /*yield*/, (0, initOas_1.default)()];
                    case 7:
                        _b.path = _c.sent();
                        _c.label = 8;
                    case 8:
                        prompts_1.default.override(options);
                        return [4 /*yield*/, (0, resync_1.default)(options)];
                    case 9:
                        _c.sent();
                        return [2 /*return*/, Promise.resolve("")];
                }
            });
        });
    };
    return ResyncCommand;
}(baseCommand_1.default));
exports.default = ResyncCommand;
